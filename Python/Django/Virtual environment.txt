source https://pypi.org/project/virtualenvwrapper-win/

Installation
===================================

# using pip
pip install virtualenvwrapper-win

# using easy_install
easy_install virtualenvwrapper-win

# from source
git clone git://github.com/davidmarble/virtualenvwrapper-win.git
cd virtualenvwrapper-win
python setup.py install   # or pip install .


Commande principal
==================================

mkvirtualenv [mkvirtualenv-options] [virtualenv-options] <name>


lsvirtualenv
    List all of the enviornments stored in WORKON_HOME.
rmvirtualenv <name>
    Remove the environment <name>.
workon [<name>]
    If <name> is specified, activate the environment named <name> (change the working virtualenv to <name>). If a project directory has been defined, we will change into it. If no argument is specified, list the available environments. One can pass additional option -c after virtualenv name to cd to virtualenv directory if no projectdir is set.
deactivate
    Deactivate the working virtualenv and switch back to the default system Python.
add2virtualenv <full or relative path>
    If a virtualenv environment is active, appends <path> to virtualenv_path_extensions.pth inside the environment’s site-packages, which effectively adds <path> to the environment’s PYTHONPATH. If a virtualenv environment is not active, appends <path> to virtualenv_path_extensions.pth inside the default Python’s site-packages. If <path> doesn’t exist, it will be created.

Convenience Commands

cdproject
    If a virtualenv environment is active and a projectdir has been defined, change the current working directory to active virtualenv’s project directory. cd- will return you to the last directory you were in before calling cdproject.
cdsitepackages
    If a virtualenv environment is active, change the current working directory to the active virtualenv’s site-packages directory. If a virtualenv environment is not active, change the current working directory to the default Python’s site-packages directory. cd- will return you to the last directory you were in before calling cdsitepackages.
cdvirtualenv
    If a virtualenv environment is active, change the current working directory to the active virtualenv base directory. If a virtualenv environment is not active, change the current working directory to the base directory of the default Python. cd- will return you to the last directory you were in before calling cdvirtualenv.
lssitepackages
    If a virtualenv environment is active, list that environment’s site-packages. If a virtualenv environment is not active, list the default Python’s site-packages. Output includes a basic listing of the site-packages directory, the contents of easy-install.pth, and the contents of virtualenv_path_extensions.pth (used by add2virtualenv).
mkproject
    If the environment variable PROJECT_HOME is set, create a new project directory in PROJECT_HOME and a virtualenv in WORKON_HOME. The project path will automatically be associated with the virtualenv on creation.
setprojectdir <full or relative path>
    If a virtualenv environment is active, define <path> as project directory containing the source code. This allows the use of cdproject to change the working directory. In addition, the directory will be added to the environment using add2virtualenv. If <path> doesn’t exist, it will be created.
toggleglobalsitepackages
    If a virtualenv environment is active, toggle between having the global site-packages in the PYTHONPATH or just the virtualenv’s site-packages.
whereis <file>
    A script included for convenience. Returns the locations (on %PATH%) that contain an executable file. You can call whereis python to find all executables starting with python or whereis python.exe for an exact match.
virtualenvwrapper
    Print a list of commands and their descriptions as basic help output. (added in v.1.2.4)

