1 - Ajouter la dependence dans maven
========================================

<dependency>
    <groupId>org.xerial</groupId>
    <artifactId>sqlite-jdbc</artifactId>
    <version>3.25.2</version>
</dependency>

2 - Heriter le dialect de Hibernate
==========================================

public class SQLiteDialect extends Dialect {
 
    public SQLiteDialect() {
        registerColumnType(Types.BIT, "integer");
        registerColumnType(Types.TINYINT, "tinyint");
        registerColumnType(Types.SMALLINT, "smallint");
        registerColumnType(Types.INTEGER, "integer");
        // other data types
    }
}

public class SQLiteIdentityColumnSupport extends IdentityColumnSupportImpl {
 
    @Override
    public boolean supportsIdentityColumns() {
        return true;
    }
 
    @Override
    public String getIdentitySelectString(String table, String column, int type) 
      throws MappingException {
        return "select last_insert_rowid()";
    }
 
    @Override
    public String getIdentityColumnString(int type) throws MappingException {
        return "integer";
    }
}

@Override
public IdentityColumnSupport getIdentityColumnSupport() {
    return new SQLiteIdentityColumnSupport();
}

// Desactiver la gestion des contraintes (sqlite ne support pas les contraintes)

@Override
public boolean hasAlterTable() {
    return false;
}
 
@Override
public boolean dropConstraints() {
    return false;
}
 
@Override
public String getDropForeignKeyString() {
    return "";
}
 
@Override
public String getAddForeignKeyConstraintString(String cn, 
  String[] fk, String t, String[] pk, boolean rpk) {
    return "";
}
 
@Override
public String getAddPrimaryKeyConstraintString(String constraintName) {
    return "";
}

3 - Configuration des sources de donn√©es
===============================================
@Autowired Environment env;
 
@Bean
public DataSource dataSource() {
    final DriverManagerDataSource dataSource = new DriverManagerDataSource();
    dataSource.setDriverClassName(env.getProperty("driverClassName"));
    dataSource.setUrl(env.getProperty("url"));
    dataSource.setUsername(env.getProperty("user"));
    dataSource.setPassword(env.getProperty("password"));
    return dataSource;
}

driverClassName=org.sqlite.JDBC
url=jdbc:sqlite:memory:myDb?cache=shared
username=sa
password=sa
hibernate.dialect=com.baeldung.dialect.SQLiteDialect
hibernate.hbm2ddl.auto=create-drop
hibernate.show_sql=true


Exemple sur github
=========================

https://github.com/eugenp/tutorials/tree/master/spring-data-rest


